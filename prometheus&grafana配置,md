kubectl get pod -n kube-system | grep 3319
kubectl exec -it -n kube-system 
docker exec -it -u=root ce9302916e8f bash
docker cp prometheus-2.2.1.linux-amd64.tar.gz ce9302916e8f:/data/prometheus/

iptables -t nat -A PREROUTING -p tcp -d 172.156.3.36 --dport 7900 -j DNAT --to 127.0.0.1:4194

mkdir -p  /data/prometheus/
mkdir -p /data/grafana/
cp prometheus-2.2.1.linux-amd64.tar.gz /data/prometheus/
cp grafana-5.0.4.linux-x64.tar.gz /data/grafana/
cd  /data/prometheus/
tar -xvzf prometheus-2.2.1.linux-amd64.tar.gz
mv prometheus-2.2.1.linux-amd64 2.2.1
/data/prometheus/2.2.1/
/data/prometheus/2.2.1/prometheus --version

cat > /data/prometheus/prometheus-config.yaml <<EOF
global:
  scrape_interval: 10s
scrape_configs:
  - job_name: cadvisor
    static_configs:
    - targets: [':7900',':7900',':7900',':7900', ':7900',':7900', ':7900', ':7900', ':7900']
EOF

ps -ef | grep prometheus

nohup /data/prometheus/2.2.1/prometheus \
    --config.file /data/prometheus/prometheus-config.yaml \
    --web.listen-address "0.0.0.0:9090" \
    --storage.tsdb.retention=30d \
    --storage.tsdb.path "/data/prometheus/prometheus.data" >> /data/prometheus/prometheus.log  2>&1 &

http://1.1.1.1:9090/targets

mkdir -p /data/grafana/
cd  /data/grafana/
tar -zxvf /data/grafana/grafana-5.0.4.linux-x64.tar.gz
mv grafana-5.0.4 5.0.4
/data/grafana/5.0.4/bin/grafana-server -v
cd /data/grafana/5.0.4
nohup ./bin/grafana-server web >> /data/grafana/grafana-server-web.log  2>&1 &

curl http://1.1.1.1:4194/metrics

iptables -t nat -A PREROUTING -p tcp -d 2.2.2.2 --dport 7900 -j DNAT --to 127.0.0.1:4194
